void main() {

  //lista com valores inteiros
  List<int> numerosInteiros = [30, 50, 60, 70];
  print(numerosInteiros);
  
  //lista com valores genéricos
  List dadosGenericos = [10, "Ana", true, 20];
  print(dadosGenericos);
  
  //lista vazia escalável
  List<int> lista = new List.empty(growable: true);
  print(lista);
  
  
}



void main() {

var lista = new List<int>.generate(10, (i) => i + 1);
  print('lista = $lista');
  print(lista.length);
  
  
  for(int i = 0; i < lista.length ; i++){
    print('${[i]}');
    
 }
  
}


void main() {

  List<int> lista_de_inteiros = [1, 2, 3, 4, 5];
  var lista_de_strings = ["A", "B", "C", "D", "E"];
  const lista_de_numeros_com_precisao = [12.3, 56.6, 19.5, 34.9, 78.2];
  
  print(lista_de_inteiros);
  print(lista_de_strings);
  print(lista_de_numeros_com_precisao);
}


void main() {
  
  List<int> lista = new List.empty(growable: true);
  
  //método para adicionar elementos na lista
  lista.add(100);
  lista.add(200);
  print(lista);
  
  }

void main() {
  
  List nomes = [];
  
  nomes.add("Paulo");
  nomes.add("Andreza");
  print(nomes);
  
  
}

void main() {

  List<String> jogadores = ["Pele", "Maradona", "Zico", "Jairzinho", "Sócrates"];
  
  
  print(jogadores);
  //impressao através do indice
  print(jogadores[2]);
  print(jogadores[3]);
  
}

void main() {
  
List fruta= ["banana", "Uva", "melão", "Abacaxi", "maracuja"];
  
  //metodo para remover elemento da lista
  fruta.remove("banana");
  
  print(fruta);
  
}


void main() {
  
  
  List<String> vingadores = ["home de ferro",
                           "capitão América",
                           "Thor",
                           "Hulk"];
  
  //metodo imprimir a lista
  print(vingadores);
  
  //remove elemento
  
  vingadores.remove("Thor");
  
  //metodo imprimir a lista
  print(vingadores);
  
  
  
}

void main() {
  
  
  List<String> vingadores = ["home de ferro",
                           "capitão América",
                           "Thor",
                           "Hulk"];
  
  
  //metodo remove elemento pelo indice
  vingadores.removeAt(1);
  
    //metodo imprimir a lista
  print(vingadores);
}


void main() {
  
  
  List<String> moradia = ["banheiro",
                           "quarto",
                           "sala",
                           "cozinha",
                         "lavanderia"];
  
  
    //metodo imprimir a lista
  print(moradia);
  
  //metodo remove o último elemento
  moradia.removeLast( );
  
  //metodo imprimir a lista
  print(moradia);
}


void main() {
  
  List<String> moradia = ["banheiro",
                           "quarto",
                           "sala",
                           "cozinha",
                         "lavanderia",
                         "sala_de_estar",
                         "garagem"];
  
  
    //metodo imprimir a lista
  print(moradia);
  
  //excluir as posições 2, 3 e 4(intervalo entre 2 a 4)
  moradia.removeRange(2, 5);
  
  //metodo imprimir a lista
  print(moradia);
}




void main() {

List animal = [];
  
  animal.add("gato");
   animal.add("cachorro");
   animal.add("passarinho");
   animal.add("cobra");
   animal.add("cavalo");
   animal.add("elefante");
  
  print(" O tamanho da lista é: ${animal.length}");
  
  print(animal);
  
}




void main() {

List<String> meses =["Jan", "fev", "mar", "abril"];
  //limpando a lista
  meses.clear();
  print(meses);
  
    //limpando a lista
  meses.clear();
  
  meses.add("Jan");
   meses.add("Dez");
  
    print(meses);
  
  //verificar se a lista não está vazia
  print(meses.isNotEmpty);
}

void main() {

List<String> arvore =["folha", "caule", "raiz", "galho"];

  //verifica se existe o elemento
  print(arvore.contains("caule"));
}




void main() {

List<String> arvore =["folha", "caule", "raiz", "galho"];

  //verifica se existe o elemento
  print(arvore.contains("tronco"));
  
  //ordena os elementos
  arvore.sort();
  print(arvore);
  
  
}



void main() {


  List pares = [0, 2, 4, 6, 8];
  print(pares);

  //inventer a ordem para decrescente
 pares.sort((a, b) => b.compareTo(a));

  print(pares);
}


void main() {
  List<String> rios = [
    "Rio parana",
    "Rio nilo",
    "Rio amarelo",
    "Rio tigre",
    "Rio ganges"
  ];
  print(rios);

  //inventer a ordem para decrescente
  rios.sort((a, b) => b.compareTo(a));

  print(rios);
  
  
}



void main() {
 
  List<int> numeros = List.generate(50, (i) => (i++));
  print(numeros);
  
  
  //tabuada do 3
 var num = 3;
 List<int> tabuada = List.generate(10, (i) => (i++)*num);
  print(tabuada);
}


void main() {
 
  List<int> numeros = [2, 4, 6, 8,10];
  List<int> numerosaoquadrado = new List.empty(growable: true);
  
  numeros.forEach((num){
    
     numerosaoquadrado.add(num * num);
    
  });
  
  print(numerosaoquadrado);
}
